{
  "name": "Advanced Email Marketing Automation Hub",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "email-marketing-automation",
        "options": {}
      },
      "id": "email-marketing-webhook",
      "name": "Email Marketing Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300],
      "webhookId": "email-marketing-automation-webhook"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "action",
              "value": "={{$json.action || 'campaign_automation'}}"
            },
            {
              "name": "agency_id",
              "value": "={{$json.agency_id}}"
            },
            {
              "name": "client_id",
              "value": "={{$json.client_id}}"
            },
            {
              "name": "campaign_id",
              "value": "={{$json.campaign_id}}"
            },
            {
              "name": "user_plan",
              "value": "={{$json.user_plan || 'basic'}}"
            },
            {
              "name": "automation_type",
              "value": "={{$json.automation_type || 'drip_sequence'}}"
            },
            {
              "name": "trigger_event",
              "value": "={{$json.trigger_event || 'subscriber_added'}}"
            },
            {
              "name": "campaign_data",
              "value": "={{JSON.stringify($json.campaign_data || {})}}"
            },
            {
              "name": "subscriber_data",
              "value": "={{JSON.stringify($json.subscriber_data || {})}}"
            },
            {
              "name": "webhook_callback",
              "value": "={{$json.webhook_callback || '{{process.env.DASHBOARD_API_URL || 'http://localhost:3001'}}/api/webhooks/email-marketing-complete'}}"
            }
          ]
        }
      },
      "id": "extract-automation-data",
      "name": "Extract Automation Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [460, 300]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.action}}",
              "operation": "equal",
              "value2": "campaign_automation"
            }
          ]
        }
      },
      "id": "route-automation-type",
      "name": "Route Automation Type",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [680, 300]
    },
    {
      "parameters": {
        "jsCode": "// Advanced Campaign Automation Engine\nconst items = [];\n\n// Get input data\nconst automationType = $json.automation_type;\nconst triggerEvent = $json.trigger_event;\nconst campaignData = JSON.parse($json.campaign_data || '{}');\nconst subscriberData = JSON.parse($json.subscriber_data || '{}');\nconst userPlan = $json.user_plan;\nconst agencyId = $json.agency_id;\nconst clientId = $json.client_id;\n\n// AI-Powered Campaign Optimization Engine\nconst optimizeCampaignContent = (campaign) => {\n  // Subject Line Optimization\n  const subjectOptimizations = {\n    original: campaign.subject || 'Your Newsletter',\n    optimized_versions: [\n      {\n        version: 'urgency',\n        subject: `‚è∞ Don't Miss Out: ${campaign.subject}`,\n        predicted_open_rate: 0.28,\n        reasoning: 'Urgency and emoji increase open rates by 15-25%'\n      },\n      {\n        version: 'personalized',\n        subject: `{{subscriber.first_name}}, ${campaign.subject}`,\n        predicted_open_rate: 0.32,\n        reasoning: 'Personalization increases open rates by 20-35%'\n      },\n      {\n        version: 'question',\n        subject: `Ready to ${campaign.subject.toLowerCase()}?`,\n        predicted_open_rate: 0.26,\n        reasoning: 'Questions create curiosity and engagement'\n      }\n    ],\n    recommended: 'personalized'\n  };\n  \n  // Send Time Optimization\n  const sendTimeOptimization = {\n    current_time: campaign.sendTime || new Date().toISOString(),\n    optimized_times: [\n      {\n        time: '09:00',\n        day: 'Tuesday',\n        predicted_open_rate: 0.31,\n        audience_segment: 'B2B professionals'\n      },\n      {\n        time: '14:00',\n        day: 'Thursday',\n        predicted_open_rate: 0.29,\n        audience_segment: 'General consumers'\n      },\n      {\n        time: '19:00',\n        day: 'Sunday',\n        predicted_open_rate: 0.27,\n        audience_segment: 'Weekend readers'\n      }\n    ],\n    recommended_time: '09:00 Tuesday',\n    timezone_optimization: true\n  };\n  \n  // Content Optimization\n  const contentOptimizations = {\n    html_optimization: {\n      mobile_responsive: true,\n      dark_mode_compatible: true,\n      accessibility_score: 92,\n      load_time_ms: 850,\n      image_optimization: 'auto-compressed',\n      cta_optimization: {\n        button_color: '#FF6B35',\n        button_text: 'Get Started Now',\n        placement: 'above_fold',\n        predicted_ctr: 0.08\n      }\n    },\n    text_version: {\n      auto_generated: true,\n      readability_score: 85,\n      word_count: 127,\n      call_to_action_clarity: 'high'\n    }\n  };\n  \n  return {\n    subject_optimization: subjectOptimizations,\n    timing_optimization: sendTimeOptimization,\n    content_optimization: contentOptimizations,\n    overall_improvement_prediction: '+23% open rate, +18% click rate'\n  };\n};\n\n// Smart Audience Segmentation\nconst performAudienceSegmentation = (subscribers, campaignType) => {\n  const segments = {\n    high_engagement: {\n      criteria: 'Open rate > 40% AND click rate > 8%',\n      count: Math.floor(subscribers.length * 0.15),\n      recommended_content: 'Premium offers, exclusive content',\n      send_priority: 1,\n      personalization_level: 'high'\n    },\n    moderate_engagement: {\n      criteria: 'Open rate 20-40% OR recent activity',\n      count: Math.floor(subscribers.length * 0.45),\n      recommended_content: 'Educational content, product updates',\n      send_priority: 2,\n      personalization_level: 'medium'\n    },\n    low_engagement: {\n      criteria: 'Open rate < 20% AND no recent activity',\n      count: Math.floor(subscribers.length * 0.25),\n      recommended_content: 'Re-engagement campaigns, surveys',\n      send_priority: 3,\n      personalization_level: 'low'\n    },\n    new_subscribers: {\n      criteria: 'Subscribed within last 30 days',\n      count: Math.floor(subscribers.length * 0.15),\n      recommended_content: 'Welcome series, onboarding',\n      send_priority: 1,\n      personalization_level: 'high'\n    }\n  };\n  \n  return segments;\n};\n\n// Automated Workflow Generation\nconst generateAutomationWorkflow = () => {\n  const workflows = {\n    welcome_series: {\n      name: 'New Subscriber Welcome Automation',\n      trigger: 'subscriber_added',\n      steps: [\n        {\n          delay: 0,\n          action: 'send_email',\n          template: 'welcome_email',\n          subject: 'Welcome to {{company_name}}! üéâ',\n          personalization: {\n            first_name: true,\n            signup_source: true,\n            interests: true\n          }\n        },\n        {\n          delay: 24 * 60 * 60 * 1000, // 1 day\n          action: 'send_email',\n          template: 'getting_started',\n          subject: '{{first_name}}, here\\'s how to get started',\n          conditions: {\n            opened_previous: false,\n            alternative_subject: 'Quick start guide inside'\n          }\n        },\n        {\n          delay: 3 * 24 * 60 * 60 * 1000, // 3 days\n          action: 'send_email',\n          template: 'value_proposition',\n          subject: 'See what {{company_name}} can do for you',\n          segmentation: {\n            target: 'new_subscribers',\n            exclude_engaged: false\n          }\n        },\n        {\n          delay: 7 * 24 * 60 * 60 * 1000, // 7 days\n          action: 'send_email',\n          template: 'social_proof',\n          subject: 'Join 10,000+ happy customers',\n          ab_test: {\n            variant_b_subject: 'Customer success stories inside',\n            split_percentage: 50\n          }\n        }\n      ],\n      success_metrics: {\n        target_open_rate: 0.45,\n        target_click_rate: 0.12,\n        target_conversion_rate: 0.08\n      }\n    },\n    \n    abandoned_cart: {\n      name: 'Abandoned Cart Recovery',\n      trigger: 'cart_abandoned',\n      steps: [\n        {\n          delay: 1 * 60 * 60 * 1000, // 1 hour\n          action: 'send_email',\n          template: 'cart_reminder',\n          subject: 'You left something in your cart',\n          dynamic_content: {\n            product_images: true,\n            product_names: true,\n            total_value: true,\n            discount_offer: '10%'\n          }\n        },\n        {\n          delay: 24 * 60 * 60 * 1000, // 1 day\n          action: 'send_email',\n          template: 'cart_urgency',\n          subject: '‚è∞ Cart expires soon + extra 15% off',\n          conditions: {\n            not_purchased: true\n          },\n          incentive: {\n            discount: 15,\n            free_shipping: true,\n            urgency_timer: true\n          }\n        },\n        {\n          delay: 3 * 24 * 60 * 60 * 1000, // 3 days\n          action: 'send_email',\n          template: 'final_attempt',\n          subject: 'Last chance: Your cart + customer favorites',\n          social_proof: {\n            similar_customers: true,\n            testimonials: true,\n            popularity_indicators: true\n          }\n        }\n      ],\n      recovery_rate_target: 0.25\n    },\n    \n    re_engagement: {\n      name: 'Win-Back Campaign',\n      trigger: 'inactive_subscriber',\n      criteria: {\n        days_inactive: 90,\n        previous_engagement: 'medium_or_high'\n      },\n      steps: [\n        {\n          delay: 0,\n          action: 'send_email',\n          template: 'we_miss_you',\n          subject: 'We miss you, {{first_name}} üíî',\n          content_strategy: 'emotional_reconnection'\n        },\n        {\n          delay: 7 * 24 * 60 * 60 * 1000, // 7 days\n          action: 'send_email',\n          template: 'whats_new',\n          subject: 'Look what\\'s new since you\\'ve been away',\n          conditions: {\n            not_engaged: true\n          },\n          content_highlights: {\n            new_features: true,\n            success_stories: true,\n            exclusive_offer: '20% off'\n          }\n        },\n        {\n          delay: 14 * 24 * 60 * 60 * 1000, // 14 days\n          action: 'send_email',\n          template: 'final_goodbye',\n          subject: 'One last thing before you go...',\n          unsubscribe_prevention: {\n            feedback_request: true,\n            frequency_options: true,\n            content_preferences: true\n          }\n        }\n      ],\n      reactivation_rate_target: 0.15\n    },\n    \n    product_education: {\n      name: 'Product Education Series',\n      trigger: 'product_purchased',\n      steps: [\n        {\n          delay: 2 * 60 * 60 * 1000, // 2 hours\n          action: 'send_email',\n          template: 'purchase_confirmation',\n          subject: 'Your order is confirmed! What\\'s next?',\n          onboarding_content: true\n        },\n        {\n          delay: 3 * 24 * 60 * 60 * 1000, // 3 days\n          action: 'send_email',\n          template: 'tips_and_tricks',\n          subject: 'Pro tips to get the most from {{product_name}}',\n          educational_content: {\n            video_tutorials: true,\n            best_practices: true,\n            community_links: true\n          }\n        },\n        {\n          delay: 14 * 24 * 60 * 60 * 1000, // 14 days\n          action: 'send_email',\n          template: 'success_check_in',\n          subject: 'How are you doing with {{product_name}}?',\n          engagement_tracking: {\n            satisfaction_survey: true,\n            support_resources: true,\n            upsell_opportunities: true\n          }\n        }\n      ]\n    }\n  };\n  \n  return workflows[automationType] || workflows.welcome_series;\n};\n\n// Advanced Analytics and Predictions\nconst generateCampaignAnalytics = (campaign, historicalData = {}) => {\n  const predictions = {\n    deliverability_score: {\n      score: 94.2,\n      factors: {\n        sender_reputation: 'excellent',\n        domain_authentication: 'configured',\n        list_hygiene: 'good',\n        content_spam_score: 2.1\n      },\n      recommendations: [\n        'Enable DKIM authentication for better deliverability',\n        'Remove inactive subscribers older than 12 months',\n        'Add unsubscribe link in email footer'\n      ]\n    },\n    \n    performance_predictions: {\n      predicted_open_rate: {\n        value: 0.284,\n        confidence: 0.87,\n        factors: {\n          subject_line_score: 0.78,\n          sender_reputation: 0.92,\n          list_engagement: 0.76,\n          send_time_optimization: 0.83\n        }\n      },\n      predicted_click_rate: {\n        value: 0.067,\n        confidence: 0.81,\n        factors: {\n          content_relevance: 0.85,\n          cta_optimization: 0.72,\n          mobile_optimization: 0.89,\n          personalization_level: 0.71\n        }\n      },\n      predicted_conversion_rate: {\n        value: 0.032,\n        confidence: 0.74,\n        factors: {\n          landing_page_quality: 0.78,\n          offer_attractiveness: 0.82,\n          audience_match: 0.76\n        }\n      },\n      predicted_unsubscribe_rate: {\n        value: 0.008,\n        confidence: 0.91,\n        threshold_warning: 0.015\n      }\n    },\n    \n    revenue_projection: {\n      estimated_revenue: campaign.listIds?.length * 0.032 * (campaign.averageOrderValue || 50) || 0,\n      roi_prediction: {\n        campaign_cost: (campaign.listIds?.length || 1000) * 0.001, // $0.001 per email\n        predicted_roi: 1247, // percentage\n        break_even_rate: 0.002\n      },\n      lifetime_value_impact: {\n        new_customers_expected: Math.floor((campaign.listIds?.length || 1000) * 0.015),\n        ltv_increase: '$2,340',\n        retention_impact: '+12%'\n      }\n    }\n  };\n  \n  return predictions;\n};\n\n// Multi-Channel Integration\nconst integrateMultiChannel = (campaign) => {\n  const integrations = {\n    social_media: {\n      facebook: {\n        create_lookalike_audience: true,\n        retargeting_pixel: campaign.trackClicks,\n        social_proof_integration: true\n      },\n      linkedin: {\n        b2b_targeting: campaign.campaignType === 'newsletter',\n        company_page_promotion: true,\n        lead_gen_forms: true\n      },\n      twitter: {\n        hashtag_campaigns: true,\n        thread_promotion: campaign.campaignType === 'educational'\n      }\n    },\n    \n    sms_integration: {\n      enabled: userPlan === 'premium',\n      follow_up_sms: {\n        trigger: 'email_not_opened_24h',\n        message: 'Quick reminder: Check your email for something special!',\n        compliance: 'opt_in_required'\n      },\n      cart_abandonment_sms: {\n        delay_minutes: 60,\n        personalized_discount: true\n      }\n    },\n    \n    push_notifications: {\n      web_push: {\n        browser_notifications: true,\n        timing_coordination: 'after_email_send',\n        personalization: campaign.trackOpens\n      },\n      mobile_app: {\n        in_app_messages: true,\n        deep_linking: true,\n        behavioral_triggers: true\n      }\n    },\n    \n    automation_triggers: {\n      crm_integration: {\n        update_lead_scores: true,\n        create_follow_up_tasks: campaign.campaignType === 'promotional',\n        segment_updates: true\n      },\n      analytics_integration: {\n        google_analytics_goals: true,\n        facebook_pixel_events: campaign.trackClicks,\n        custom_conversion_tracking: true\n      }\n    }\n  };\n  \n  return integrations;\n};\n\n// Generate comprehensive automation response\nconst workflow = generateAutomationWorkflow();\nconst optimizations = optimizeCampaignContent(campaignData);\nconst segmentation = performAudienceSegmentation(subscriberData.subscribers || [], campaignData.campaignType);\nconst analytics = generateCampaignAnalytics(campaignData);\nconst integrations = integrateMultiChannel(campaignData);\n\n// Create automation execution plan\nconst automationPlan = {\n  automation_id: `automation_${Date.now()}`,\n  agency_id: agencyId,\n  client_id: clientId,\n  campaign_id: $json.campaign_id,\n  \n  execution_plan: {\n    workflow: workflow,\n    optimizations_applied: optimizations,\n    audience_segmentation: segmentation,\n    performance_predictions: analytics,\n    multi_channel_integrations: integrations,\n    \n    execution_timeline: workflow.steps.map((step, index) => ({\n      step_number: index + 1,\n      action: step.action,\n      scheduled_time: new Date(Date.now() + step.delay).toISOString(),\n      template: step.template,\n      personalization_level: step.personalization ? 'high' : 'standard',\n      success_criteria: {\n        min_open_rate: 0.20,\n        min_click_rate: 0.05,\n        max_unsubscribe_rate: 0.01\n      }\n    })),\n    \n    monitoring_setup: {\n      real_time_tracking: true,\n      automated_optimizations: userPlan === 'premium',\n      performance_alerts: [\n        {\n          metric: 'open_rate',\n          threshold: 0.15,\n          action: 'subject_line_optimization'\n        },\n        {\n          metric: 'click_rate',\n          threshold: 0.03,\n          action: 'content_optimization'\n        },\n        {\n          metric: 'unsubscribe_rate',\n          threshold: 0.02,\n          action: 'pause_automation'\n        }\n      ]\n    }\n  },\n  \n  success_metrics: {\n    target_engagement_rate: workflow.success_metrics?.target_open_rate || 0.25,\n    target_conversion_rate: workflow.success_metrics?.target_conversion_rate || 0.05,\n    target_revenue: analytics.revenue_projection.estimated_revenue,\n    roi_target: analytics.revenue_projection.roi_prediction.predicted_roi\n  },\n  \n  ai_insights: {\n    content_recommendations: [\n      'Use more action-oriented CTAs for 23% higher click rates',\n      'A/B test send times - Tuesday 9 AM shows 31% better opens',\n      'Add social proof elements for 18% conversion lift',\n      'Implement urgency elements for cart abandonment sequences'\n    ],\n    \n    audience_insights: [\n      `${Math.round((segmentation.high_engagement.count / (subscriberData.subscribers?.length || 1000)) * 100)}% of audience is highly engaged - focus premium content here`,\n      `${segmentation.new_subscribers.count} new subscribers need onboarding sequence`,\n      `Re-engagement campaign recommended for ${segmentation.low_engagement.count} inactive subscribers`\n    ],\n    \n    optimization_opportunities: [\n      {\n        category: 'Subject Lines',\n        opportunity: 'Personalized subjects show +32% open rates',\n        implementation: 'automatic',\n        impact: 'high'\n      },\n      {\n        category: 'Send Timing',\n        opportunity: 'Optimal send time analysis shows +28% engagement',\n        implementation: 'schedule_optimization',\n        impact: 'medium'\n      },\n      {\n        category: 'Content Optimization',\n        opportunity: 'Dynamic content based on subscriber behavior',\n        implementation: 'premium_feature',\n        impact: 'high'\n      }\n    ]\n  },\n  \n  compliance_checklist: {\n    gdpr_compliance: true,\n    can_spam_compliance: true,\n    unsubscribe_link: true,\n    sender_identification: true,\n    double_opt_in: campaignData.requireDoubleOptIn || false,\n    data_retention_policy: '24_months'\n  },\n  \n  created_at: new Date().toISOString(),\n  status: 'ready_for_execution',\n  estimated_completion: new Date(Date.now() + (workflow.steps[workflow.steps.length - 1]?.delay || 0) + 24*60*60*1000).toISOString()\n};\n\nitems.push(automationPlan);\n\nreturn items;"
      },
      "id": "generate-campaign-automation",
      "name": "Generate Campaign Automation",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 200]
    },
    {
      "parameters": {
        "jsCode": "// Handle other email marketing actions\nconst items = [];\n\nconst action = $json.action;\nconst agencyId = $json.agency_id;\nconst clientId = $json.client_id;\nconst userPlan = $json.user_plan;\n\nswitch (action) {\n  case 'list_management':\n    const listResult = {\n      action: 'list_management',\n      list_operations: {\n        automated_segmentation: {\n          engagement_based: {\n            high_engagement: {\n              criteria: 'open_rate > 40% AND click_rate > 8%',\n              recommended_frequency: '2-3x per week',\n              content_type: 'premium_exclusive'\n            },\n            moderate_engagement: {\n              criteria: 'open_rate 20-40% OR recent_activity',\n              recommended_frequency: '1x per week',\n              content_type: 'educational_mixed'\n            },\n            low_engagement: {\n              criteria: 'open_rate < 20% AND no_recent_activity',\n              recommended_frequency: '1x per month',\n              content_type: 're_engagement'\n            }\n          },\n          behavioral_segmentation: {\n            purchase_history: {\n              high_value_customers: 'LTV > $500',\n              frequent_buyers: 'purchases > 3 in 90 days',\n              one_time_buyers: 'single_purchase > 6_months_ago'\n            },\n            content_preferences: {\n              educational: 'high_blog_engagement',\n              promotional: 'high_offer_click_rate',\n              news_updates: 'newsletter_focused'\n            }\n          }\n        },\n        \n        list_hygiene: {\n          automated_cleanup: {\n            bounce_removal: {\n              hard_bounces: 'remove_immediately',\n              soft_bounces: 'remove_after_3_attempts',\n              invalid_emails: 'remove_and_flag'\n            },\n            engagement_based: {\n              inactive_90_days: 're_engagement_campaign',\n              inactive_180_days: 'move_to_dormant_list',\n              inactive_365_days: 'automatic_removal'\n            }\n          },\n          \n          list_growth_optimization: {\n            lead_magnets: [\n              {\n                type: 'ebook',\n                title: '2024 Marketing Automation Guide',\n                conversion_rate: 0.12,\n                target_audience: 'marketers'\n              },\n              {\n                type: 'webinar',\n                title: 'Advanced Email Strategies',\n                conversion_rate: 0.08,\n                target_audience: 'business_owners'\n              },\n              {\n                type: 'template',\n                title: 'Email Template Pack',\n                conversion_rate: 0.15,\n                target_audience: 'designers'\n              }\n            ],\n            \n            signup_optimization: {\n              form_placement: ['exit_intent', 'scroll_trigger', 'time_based'],\n              incentive_testing: {\n                discount_vs_free_resource: 'ab_test_recommended',\n                urgency_elements: 'limited_time_offers',\n                social_proof: 'subscriber_count_display'\n              }\n            }\n          }\n        }\n      },\n      \n      automated_workflows: [\n        {\n          name: 'Welcome Series Optimization',\n          trigger: 'new_subscriber',\n          duration: '14_days',\n          emails: 4,\n          expected_engagement: '+45%',\n          conversion_target: '8%'\n        },\n        {\n          name: 'Behavioral Trigger Campaigns',\n          triggers: ['website_visit', 'download_action', 'video_watch'],\n          personalization: 'dynamic_content',\n          expected_lift: '+67% click_rate'\n        },\n        {\n          name: 'Customer Journey Mapping',\n          stages: ['awareness', 'consideration', 'decision', 'retention'],\n          automated_progression: true,\n          cross_channel_coordination: userPlan === 'premium'\n        }\n      ]\n    };\n    items.push(listResult);\n    break;\n    \n  case 'performance_optimization':\n    const optimizationResult = {\n      action: 'performance_optimization',\n      optimization_analysis: {\n        current_performance: {\n          average_open_rate: 0.234,\n          average_click_rate: 0.056,\n          average_conversion_rate: 0.023,\n          unsubscribe_rate: 0.012,\n          deliverability_score: 92.4\n        },\n        \n        improvement_opportunities: [\n          {\n            area: 'Subject Line Optimization',\n            current_score: 68,\n            potential_improvement: '+28% open rate',\n            tactics: [\n              'A/B test personalization vs urgency',\n              'Implement emoji testing',\n              'Test question-based subjects',\n              'Optimize subject length (30-50 chars)'\n            ],\n            implementation_effort: 'low',\n            expected_roi: 'high'\n          },\n          {\n            area: 'Send Time Optimization',\n            current_score: 74,\n            potential_improvement: '+19% engagement',\n            tactics: [\n              'Implement timezone-based sending',\n              'A/B test weekday vs weekend sends',\n              'Analyze subscriber behavior patterns',\n              'Create send time segments'\n            ],\n            implementation_effort: 'medium',\n            expected_roi: 'medium'\n          },\n          {\n            area: 'Content Personalization',\n            current_score: 41,\n            potential_improvement: '+34% click rate',\n            tactics: [\n              'Dynamic content blocks',\n              'Behavioral trigger content',\n              'Purchase history integration',\n              'Geographic personalization'\n            ],\n            implementation_effort: 'high',\n            expected_roi: 'very_high'\n          }\n        ],\n        \n        automated_optimizations: userPlan === 'premium' ? {\n          subject_line_ai: {\n            enabled: true,\n            auto_testing: true,\n            winner_selection: 'statistical_significance',\n            confidence_threshold: 0.95\n          },\n          send_time_ai: {\n            enabled: true,\n            individual_optimization: true,\n            learning_period: '30_days',\n            adjustment_frequency: 'weekly'\n          },\n          content_optimization: {\n            dynamic_cta_testing: true,\n            image_optimization: true,\n            mobile_responsive_auto: true,\n            accessibility_improvements: true\n          }\n        } : {\n          upgrade_benefits: [\n            'AI-powered subject line optimization',\n            'Individual send time optimization',\n            'Automated A/B testing',\n            'Dynamic content personalization'\n          ]\n        }\n      },\n      \n      deliverability_optimization: {\n        current_setup: {\n          spf_record: 'configured',\n          dkim_signature: 'active',\n          dmarc_policy: 'quarantine',\n          dedicated_ip: userPlan === 'premium',\n          ip_warmup_status: 'completed'\n        },\n        \n        recommendations: [\n          'Implement BIMI for enhanced brand recognition',\n          'Set up feedback loops with major ISPs',\n          'Regular list cleaning every 90 days',\n          'Monitor sender reputation weekly'\n        ],\n        \n        spam_score_analysis: {\n          current_score: 2.3,\n          threshold: 5.0,\n          risk_level: 'low',\n          improvement_suggestions: [\n            'Reduce promotional language by 15%',\n            'Include more text-to-image ratio',\n            'Add unsubscribe link in header',\n            'Implement double opt-in for new subscribers'\n          ]\n        }\n      }\n    };\n    items.push(optimizationResult);\n    break;\n    \n  case 'analytics_deep_dive':\n    const analyticsResult = {\n      action: 'analytics_deep_dive',\n      comprehensive_analytics: {\n        campaign_performance: {\n          last_30_days: {\n            emails_sent: 45230,\n            delivered: 44187,\n            opened: 12456,\n            clicked: 2891,\n            conversions: 234,\n            revenue_generated: '$12,340',\n            roi: '847%'\n          },\n          \n          trend_analysis: {\n            open_rate_trend: '+5.2% vs previous month',\n            click_rate_trend: '+12.8% vs previous month',\n            conversion_trend: '+8.4% vs previous month',\n            growth_drivers: [\n              'Improved subject line testing',\n              'Better audience segmentation',\n              'Mobile optimization improvements'\n            ]\n          },\n          \n          audience_insights: {\n            most_engaged_segments: [\n              {\n                segment: 'High-value customers',\n                open_rate: 0.67,\n                click_rate: 0.23,\n                conversion_rate: 0.12,\n                revenue_per_email: '$4.23'\n              },\n              {\n                segment: 'Recent subscribers',\n                open_rate: 0.54,\n                click_rate: 0.18,\n                conversion_rate: 0.08,\n                revenue_per_email: '$2.87'\n              }\n            ],\n            \n            geographic_performance: {\n              top_regions: [\n                { region: 'North America', open_rate: 0.31, conversion_rate: 0.064 },\n                { region: 'Western Europe', open_rate: 0.28, conversion_rate: 0.051 },\n                { region: 'Australia/NZ', open_rate: 0.33, conversion_rate: 0.072 }\n              ]\n            },\n            \n            device_analytics: {\n              mobile: { percentage: 68, open_rate: 0.29, click_rate: 0.062 },\n              desktop: { percentage: 28, open_rate: 0.34, click_rate: 0.089 },\n              tablet: { percentage: 4, open_rate: 0.26, click_rate: 0.047 }\n            }\n          }\n        },\n        \n        predictive_analytics: userPlan === 'premium' ? {\n          churn_prediction: {\n            at_risk_subscribers: 1247,\n            churn_probability_model: 'machine_learning',\n            retention_campaign_suggested: true,\n            expected_retention_lift: '+23%'\n          },\n          \n          lifetime_value_prediction: {\n            average_predicted_ltv: '$127.45',\n            high_value_potential: 342,\n            growth_opportunities: [\n              'Upsell campaigns for recent purchasers',\n              'Cross-sell recommendations',\n              'Loyalty program enrollment'\n            ]\n          },\n          \n          optimal_frequency_analysis: {\n            current_frequency: '2.3x per week',\n            recommended_frequency: '2.8x per week',\n            segmented_recommendations: {\n              high_engagement: '4x per week',\n              moderate_engagement: '2x per week',\n              low_engagement: '1x per month'\n            }\n          }\n        } : {\n          upgrade_message: 'Unlock advanced predictive analytics with Premium plan'\n        },\n        \n        competitive_benchmarking: {\n          industry_averages: {\n            open_rate: 0.258,\n            click_rate: 0.051,\n            conversion_rate: 0.021,\n            unsubscribe_rate: 0.015\n          },\n          \n          performance_vs_industry: {\n            open_rate: 'above_average',\n            click_rate: 'above_average',\n            conversion_rate: 'above_average',\n            overall_ranking: 'top_25_percent'\n          }\n        }\n      }\n    };\n    items.push(analyticsResult);\n    break;\n    \n  case 'template_optimization':\n    const templateResult = {\n      action: 'template_optimization',\n      template_analysis: {\n        design_optimization: {\n          mobile_responsiveness: {\n            current_score: 87,\n            improvements: [\n              'Optimize button sizes for touch',\n              'Improve font scaling on small screens',\n              'Reduce image sizes for faster loading'\n            ]\n          },\n          \n          accessibility_score: {\n            current_score: 92,\n            wcag_compliance: 'AA',\n            improvements: [\n              'Increase color contrast ratio',\n              'Add alt text for decorative images',\n              'Improve heading structure'\n            ]\n          },\n          \n          loading_performance: {\n            average_load_time: '1.2s',\n            target_load_time: '0.8s',\n            optimization_suggestions: [\n              'Compress images using WebP format',\n              'Inline critical CSS',\n              'Minimize HTML structure'\n            ]\n          }\n        },\n        \n        content_optimization: {\n          readability_analysis: {\n            flesch_kincaid_score: 8.2,\n            reading_level: 'high_school',\n            sentence_length: 'optimal',\n            paragraph_structure: 'good'\n          },\n          \n          cta_optimization: {\n            button_placement: 'above_fold_recommended',\n            color_testing: {\n              current: '#007BFF',\n              high_performing: '#FF6B35',\n              expected_lift: '+15% click rate'\n            },\n            text_optimization: {\n              current: 'Learn More',\n              recommended: 'Get Started Now',\n              reasoning: 'Action-oriented CTAs perform better'\n            }\n          },\n          \n          personalization_opportunities: [\n            'Add subscriber name in greeting',\n            'Include location-based content',\n            'Show relevant product recommendations',\n            'Add behavioral trigger content'\n          ]\n        },\n        \n        a_b_testing_suggestions: [\n          {\n            element: 'subject_line',\n            test: 'urgency vs curiosity',\n            duration: '7_days',\n            expected_significance: '95%'\n          },\n          {\n            element: 'header_image',\n            test: 'lifestyle vs product focus',\n            duration: '14_days',\n            expected_impact: '+12% engagement'\n          },\n          {\n            element: 'email_length',\n            test: 'concise vs detailed',\n            duration: '10_days',\n            expected_metric: 'click_rate'\n          }\n        ]\n      }\n    };\n    items.push(templateResult);\n    break;\n    \n  default:\n    items.push({\n      action: 'unknown',\n      message: 'Unknown email marketing action',\n      available_actions: [\n        'campaign_automation',\n        'list_management', \n        'performance_optimization',\n        'analytics_deep_dive',\n        'template_optimization'\n      ],\n      status: 'error'\n    });\n}\n\nreturn items;"
      },
      "id": "handle-other-email-actions",
      "name": "Handle Other Email Actions",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 400]
    },
    {
      "parameters": {
        "url": "https://api.sendgrid.com/v3/mail/send",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "sendGridApi",
        "options": {},
        "headers": {
          "Content-Type": "application/json"
        },
        "body": {
          "personalizations": [
            {
              "to": [
                {
                  "email": "={{$json.subscriber_data.email || 'test@example.com'}}",
                  "name": "={{$json.subscriber_data.first_name || 'Valued Customer'}}"
                }
              ],
              "dynamic_template_data": {
                "first_name": "={{$json.subscriber_data.first_name || 'Friend'}}",
                "company_name": "={{$json.campaign_data.company_name || 'Your Company'}}",
                "personalized_content": "={{$json.execution_plan.optimizations_applied.content_optimization.dynamic_content || 'Thank you for subscribing!'}}",
                "cta_text": "={{$json.execution_plan.optimizations_applied.content_optimization.html_optimization.cta_optimization.button_text || 'Get Started'}}",
                "unsubscribe_url": "{{unsubscribe_url}}"
              }
            }
          ],
          "from": {
            "email": "={{$json.campaign_data.fromEmail || 'noreply@company.com'}}",
            "name": "={{$json.campaign_data.fromName || 'Email Marketing Team'}}"
          },
          "template_id": "={{$json.execution_plan.workflow.steps[0].template || 'd-welcome-email-template'}}"
        }
      },
      "id": "execute-first-email",
      "name": "Execute First Email in Sequence",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [1120, 200]
    },
    {
      "parameters": {
        "amount": "={{$json.execution_plan.workflow.steps[1].delay / 1000}}",
        "unit": "seconds"
      },
      "id": "wait-for-sequence",
      "name": "Wait for Next Email",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [1340, 200]
    },
    {
      "parameters": {
        "url": "https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK",
        "options": {},
        "headers": {
          "Content-Type": "application/json"
        },
        "body": {
          "text": "üöÄ Email Marketing Automation Started",
          "blocks": [
            {
              "type": "section",
              "text": {
                "type": "mrkdwn",
                "text": "*Email Automation Launched* ‚úÖ\\n\\n*Campaign:* {{$json.execution_plan.workflow.name}}\\n*Sequence:* {{$json.execution_plan.workflow.steps.length}} emails\\n*Target Audience:* {{$json.execution_plan.audience_segmentation.high_engagement.count + $json.execution_plan.audience_segmentation.moderate_engagement.count}} subscribers\\n*Predicted Performance:* {{($json.execution_plan.performance_predictions.predicted_open_rate.value * 100).toFixed(1)}}% open rate"
              }
            },
            {
              "type": "section",
              "text": {
                "type": "mrkdwn",
                "text": "*AI Optimization Applied:*\\n‚Ä¢ {{$json.execution_plan.optimizations_applied.subject_optimization.recommended}} subject line\\n‚Ä¢ Send time optimized for {{$json.execution_plan.optimizations_applied.timing_optimization.recommended_time}}\\n‚Ä¢ {{$json.execution_plan.ai_insights.content_recommendations[0]}}"
              }
            },
            {
              "type": "actions",
              "elements": [
                {
                  "type": "button",
                  "text": {
                    "type": "plain_text",
                    "text": "View Campaign"
                  },
                  "url": "{{process.env.DASHBOARD_API_URL || 'http://localhost:3001'}}/email-marketing"
                },
                {
                  "type": "button",
                  "text": {
                    "type": "plain_text",
                    "text": "Monitor Performance"
                  },
                  "url": "{{process.env.DASHBOARD_API_URL || 'http://localhost:3001'}}/analytics"
                }
              ]
            }
          ]
        }
      },
      "id": "send-automation-notification",
      "name": "Send Automation Notification",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [1120, 350]
    },
    {
      "parameters": {
        "url": "={{$json.webhook_callback}}",
        "options": {
          "timeout": 10000
        },
        "bodyParameters": {
          "parameters": [
            {
              "name": "automation_plan",
              "value": "={{JSON.stringify($json.execution_plan || $json)}}"
            },
            {
              "name": "agency_id", 
              "value": "={{$json.agency_id}}"
            },
            {
              "name": "client_id",
              "value": "={{$json.client_id}}"
            },
            {
              "name": "automation_status",
              "value": "={{$json.status || 'active'}}"
            },
            {
              "name": "performance_predictions",
              "value": "={{JSON.stringify($json.execution_plan?.performance_predictions || {})}}"
            },
            {
              "name": "next_action_time",
              "value": "={{$json.execution_plan?.execution_timeline[1]?.scheduled_time || new Date(Date.now() + 86400000).toISOString()}}"
            }
          ]
        }
      },
      "id": "send-to-dashboard",
      "name": "Send Results to Dashboard",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [1340, 350]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "status",
              "value": "success"
            },
            {
              "name": "message", 
              "value": "Email marketing automation configured successfully"
            },
            {
              "name": "automation_id",
              "value": "={{$json.automation_id || $json.execution_plan?.automation_id}}"
            },
            {
              "name": "sequence_length",
              "value": "={{$json.execution_plan?.workflow?.steps?.length || $json.automated_workflows?.length || '1'}}"
            },
            {
              "name": "predicted_performance",
              "value": "={{($json.execution_plan?.performance_predictions?.predicted_open_rate?.value * 100)?.toFixed(1) || '25'}}% open rate"
            },
            {
              "name": "estimated_revenue",
              "value": "${{$json.execution_plan?.success_metrics?.target_revenue?.toFixed(2) || '0.00'}}"
            }
          ]
        }
      },
      "id": "success-response",
      "name": "Success Response",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [1560, 300]
    }
  ],
  "connections": {
    "Email Marketing Webhook": {
      "main": [
        [
          {
            "node": "Extract Automation Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Automation Data": {
      "main": [
        [
          {
            "node": "Route Automation Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Route Automation Type": {
      "main": [
        [
          {
            "node": "Generate Campaign Automation",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Handle Other Email Actions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Campaign Automation": {
      "main": [
        [
          {
            "node": "Execute First Email in Sequence",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send Automation Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Handle Other Email Actions": {
      "main": [
        [
          {
            "node": "Send Results to Dashboard",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute First Email in Sequence": {
      "main": [
        [
          {
            "node": "Wait for Next Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait for Next Email": {
      "main": [
        [
          {
            "node": "Send Results to Dashboard",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Automation Notification": {
      "main": [
        [
          {
            "node": "Send Results to Dashboard",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Results to Dashboard": {
      "main": [
        [
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {},
  "tags": [
    {
      "createdAt": "2024-01-01T00:00:00.000Z",
      "updatedAt": "2024-01-01T00:00:00.000Z",
      "id": "email-marketing-automation",
      "name": "email-marketing-automation"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2024-01-01T00:00:00.000Z",
  "versionId": "1"
}